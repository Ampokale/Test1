// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspnetserver.EntityLayer;

#nullable disable

namespace aspnetserver.Migrations.NetFSD
{
    [DbContext(typeof(NetFSDContext))]
    [Migration("20220607065405_first Azure Migartion")]
    partial class firstAzureMigartion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("aspnetserver.EntityLayer.ProjectMemberT", b =>
                {
                    b.Property<int>("ProjMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("projMemberId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjMemberId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("projectId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProjMemberId");

                    b.HasIndex("Email");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("projectMembers", (string)null);
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ProjectT", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("projectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("createdBy");

                    b.Property<string>("ProjectDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("projectDesc");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("projectName");

                    b.Property<DateTime?>("Startdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("startdate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProjectId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ReportT", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<int?>("PId")
                        .HasColumnType("int")
                        .HasColumnName("pId");

                    b.Property<DateTime?>("ReportedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("reportedOn")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TaskDetails")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("taskDetails");

                    b.Property<int>("Taskstatus")
                        .HasColumnType("int")
                        .HasColumnName("taskstatus");

                    b.Property<string>("WhatAction")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("whatAction");

                    b.HasKey("ReportId")
                        .HasName("PK__tb_Report__DC11576792592C7A");

                    b.HasIndex("PId");

                    b.ToTable("reportTb", (string)null);
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.StatusTableT", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("statusId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"), 1L, 1);

                    b.Property<string>("SDetail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("sDetail");

                    b.HasKey("StatusId")
                        .HasName("PK__statusTa__36257A18B33680BD");

                    b.ToTable("statusTable", (string)null);
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.TbTaskT", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"), 1L, 1);

                    b.Property<string>("AssignedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("assignedBy");

                    b.Property<string>("AssignedTo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("PId")
                        .HasColumnType("int")
                        .HasColumnName("pId");

                    b.Property<string>("TaskDetails")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("taskDetails");

                    b.Property<int?>("TaskStatus")
                        .HasColumnType("int")
                        .HasColumnName("taskStatus");

                    b.HasKey("TId")
                        .HasName("PK__tb_Task__DC11576792592C7A");

                    b.HasIndex("PId");

                    b.HasIndex("TaskStatus");

                    b.ToTable("tb_Task", (string)null);
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.UserT", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("Roles")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValueSql("('Member')");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534A77A9C9F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ProjectMemberT", b =>
                {
                    b.HasOne("aspnetserver.EntityLayer.UserT", "EmailNavigation")
                        .WithMany()
                        .HasForeignKey("Email")
                        .HasPrincipalKey("Email")
                        .HasConstraintName("FK__projectMe__email__4F47C5E3");

                    b.HasOne("aspnetserver.EntityLayer.ProjectT", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__projectMe__proje__4D5F7D71");

                    b.HasOne("aspnetserver.EntityLayer.UserT", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__projectMe__UserI__4E53A1AA");

                    b.Navigation("EmailNavigation");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ProjectT", b =>
                {
                    b.HasOne("aspnetserver.EntityLayer.UserT", "CreatedByNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("CreatedBy")
                        .HasPrincipalKey("Email")
                        .HasConstraintName("FK__Projects__create__45BE5BA9");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ReportT", b =>
                {
                    b.HasOne("aspnetserver.EntityLayer.ProjectT", "PIdNavigation")
                        .WithMany()
                        .HasForeignKey("PId")
                        .HasConstraintName("FK__report__pId__634EBE90");

                    b.Navigation("PIdNavigation");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.TbTaskT", b =>
                {
                    b.HasOne("aspnetserver.EntityLayer.ProjectT", "PIdNavigation")
                        .WithMany("TbTasks")
                        .HasForeignKey("PId")
                        .HasConstraintName("FK__tb_Task__pId__531856C7");

                    b.HasOne("aspnetserver.EntityLayer.StatusTableT", "TaskStatusNavigation")
                        .WithMany("TbTasks")
                        .HasForeignKey("TaskStatus")
                        .HasConstraintName("FK__tb_Task__taskSta__540C7B00");

                    b.Navigation("PIdNavigation");

                    b.Navigation("TaskStatusNavigation");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.ProjectT", b =>
                {
                    b.Navigation("TbTasks");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.StatusTableT", b =>
                {
                    b.Navigation("TbTasks");
                });

            modelBuilder.Entity("aspnetserver.EntityLayer.UserT", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
